# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from whatsappcloudapi.api_helper import APIHelper
from whatsappcloudapi.configuration import Server
from whatsappcloudapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from whatsappcloudapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from apimatic_core.authentication.multiple.or_auth_group import Or
from whatsappcloudapi.models.success_response import SuccessResponse


class RegistrationController(BaseController):

    """A Controller to access Endpoints in the whatsappcloudapi API."""
    def __init__(self, config):
        super(RegistrationController, self).__init__(config)

    def register_phone(self,
                       phone_number_id,
                       body):
        """Does a POST request to /{Phone-Number-ID}/register.

        Used to register a phone number or to migrate WhatsApp Business
        Accounts from a current On-Premises deployment to the new Cloud-Based
        API. Business Solution Providers (BSPs) must authenticate themselves
        with an access token with the whatsapp_business_management
        permission.

        Args:
            phone_number_id (string): TODO: type description here.
            body (RegisterPhoneRequest): TODO: type description here.

        Returns:
            SuccessResponse: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/{Phone-Number-ID}/register')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SuccessResponse.from_dictionary)
        ).execute()

    def deregister_phone(self,
                         content_type,
                         phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/deregister.

        Used to deregister a phone number. Deregister phone removes a
        previously registered phone. You can always re-register your phone
        using by repeating the registration process. Business Solution
        Providers (BSPs) must authenticate themselves with an access token
        with the whatsapp_business_management permission.

        Args:
            content_type (ContentTypeEnum): TODO: type description here.
            phone_number_id (string): TODO: type description here.

        Returns:
            SuccessResponse: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/{Phone-Number-ID}/deregister')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value(content_type))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SuccessResponse.from_dictionary)
        ).execute()
